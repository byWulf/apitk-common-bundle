name: Continuous Integration

on:
  pull_request:
  push:
    branches:
      - "master"

jobs:
  run:
    runs-on: ubuntu-20.04
    env:
      extensions: intl,mbstring
    strategy:
      fail-fast: false
      matrix:
        php: ['8.0', '8.1']
        symfony: ['~6.0']
        versions: ['prefer-stable', 'prefer-lowest']
        include:
          - description: 'Symfony 5.4 stable'
            php: '8.0'
            symfony: '^5.4'
            versions: 'prefer-stable'
          - description: 'Symfony 5.4 lowest'
            php: '8.0'
            symfony: '^5.4'
            versions: 'prefer-lowest'
    name: PHP ${{ matrix.php }} Symfony ${{ matrix.symfony }} ${{ matrix.versions }} ${{ matrix.description }}
    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Setup PHP
        uses: shivammathur/setup-php@v2
        with:
          php-version: ${{ matrix.php }}
          extensions: mbstring

      - name: Get composer cache directory
        id: composer-cache
        run: echo "::set-output name=dir::$(composer config cache-files-dir)"

      - name: Cache composer dependencies
        uses: actions/cache@v2
        with:
          path: ${{ steps.composer-cache.outputs.dir }}
          key: ${{ runner.os }}-composer-${{ hashFiles('**/composer.lock') }}
          restore-keys: ${{ runner.os }}-composer-

      - name: Install dependencies
        run: composer require "symfony/symfony:${{ matrix.symfony }}" --no-update --no-interaction
        if: matrix.symfony-versions

      - name: Install dependencies
        run: composer update --no-interaction --${{ matrix.versions }}

      - name: Run pre-commit tests
        run: php vendor/bin/captainhook hook:pre-commit
